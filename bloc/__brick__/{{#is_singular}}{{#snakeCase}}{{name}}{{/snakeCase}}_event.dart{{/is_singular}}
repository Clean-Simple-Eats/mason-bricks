part of '{{#snakeCase}}{{{name}}}{{/snakeCase}}_bloc.dart';

abstract class {{#pascalCase}}{{{name}}}{{/pascalCase}}Event extends Equatable {
  const {{#pascalCase}}{{{name}}}{{/pascalCase}}Event();

  @override
  List<Object?> get props => [];
}

@autoequal
class _Fetch extends {{#pascalCase}}{{{name}}}{{/pascalCase}}Event {
  const _Fetch(this.id);

  final String id;

  @override
  List<Object?> get props => _$props;
}

class _Create extends {{#pascalCase}}{{{name}}}{{/pascalCase}}Event {
  const _Create();
}

@autoequal
class _Save extends {{#pascalCase}}{{{name}}}{{/pascalCase}}Event {
  const _Save(this.{{#camelCase}}{{{name}}}{{/camelCase}});

  final {{#pascalCase}}{{{name}}}{{/pascalCase}} {{#camelCase}}{{{name}}}{{/camelCase}};

  @override
  List<Object?> get props => _$props;
}

@autoequal
class _Delete extends {{#pascalCase}}{{{name}}}{{/pascalCase}}Event {
  const _Delete(this.id);

  final String id;

  @override
  List<Object?> get props => _$props;
}

@autoequal
class _CacheChanged extends {{#pascalCase}}{{{name}}}{{/pascalCase}}Event {
  const _CacheChanged(this.state);

  final _Ready state;

  @override
  List<Object?> get props => _$props;
}

@autoequal
class _SourceChanged extends {{#pascalCase}}{{{name}}}{{/pascalCase}}Event {
  const _SourceChanged(this.state);

  final {{#pascalCase}}{{{name}}}{{/pascalCase}}State state;

  @override
  List<Object?> get props => _$props;
}

extension {{#pascalCase}}{{{name}}}{{/pascalCase}}BlocX on {{#pascalCase}}{{{name}}}{{/pascalCase}}Bloc {
  // ignore: library_private_types_in_public_api
  _Events get events => _Events(this);
}

class _Events {
  const _Events(this._bloc);

  final {{#pascalCase}}{{{name}}}{{/pascalCase}}Bloc _bloc;

  void create() {
    _bloc.add(const _Create());
  }

  void delete(String id) {
    _bloc.add(_Delete(id));
  }

  void fetch(String id) {
    _bloc.add(_Fetch(id));
  }

  void save({{#pascalCase}}{{{name}}}{{/pascalCase}} {{#camelCase}}{{{name}}}{{/camelCase}}) {
    _bloc.add(_Save({{#camelCase}}{{{name}}}{{/camelCase}}));
  }
}
